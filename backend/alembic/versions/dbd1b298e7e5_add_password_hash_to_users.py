"""add password_hash to users

Revision ID: dbd1b298e7e5
Revises:
Create Date: 2025-07-18 17:50:36.401151

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "dbd1b298e7e5"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # --- 既存テーブル群をそのまま ---
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("role", sa.String(length=20), nullable=False),
        sa.Column("local_base_dir", sa.String(length=512), nullable=False),
        sa.Column("remote_base_dir", sa.String(length=512), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)

    op.create_table(
        "server_credentials",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("host", sa.String(length=100), nullable=False),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("password_encrypted", sa.String(length=512), nullable=False),
        sa.Column("auth_method", sa.String(length=20), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_server_credentials_id"), "server_credentials", ["id"], unique=False
    )

    op.create_table(
        "job_bundles",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("calc_settings", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_job_bundles_id"), "job_bundles", ["id"], unique=False)

    # --- ① molecules は latest_job_id の FK を貼らずに作成 ---
    op.create_table(
        "molecules",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("charge", sa.Integer(), nullable=False),
        sa.Column("multiplicity", sa.Integer(), nullable=False),
        sa.Column("structure_xyz", sa.Text(), nullable=False),
        sa.Column("bundle_id", sa.Integer(), nullable=False),
        sa.Column("latest_job_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["bundle_id"], ["job_bundles.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_molecules_id"), "molecules", ["id"], unique=False)

    # --- ② jobs は molecule_id → molecules.id の FK を貼って作成 ---
    op.create_table(
        "jobs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("molecule_id", sa.Integer(), nullable=False),
        sa.Column("gjf_path", sa.String(length=512), nullable=False),
        sa.Column("log_path", sa.String(length=512), nullable=True),
        sa.Column("job_type", sa.String(length=20), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "queued", "running", "done", "error", "cancelled", name="jobstatus"
            ),
            nullable=False,
        ),
        sa.Column("submitted_at", sa.DateTime(), nullable=False),
        sa.Column("remote_job_id", sa.String(length=100), nullable=True),
        sa.Column("parent_job_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["molecule_id"], ["molecules.id"]),
        sa.ForeignKeyConstraint(["parent_job_id"], ["jobs.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_jobs_id"), "jobs", ["id"], unique=False)

    # --- ③ 両テーブル生成後に改めて相互参照を張る ---
    op.create_foreign_key(
        "fk_molecules_latest_job_id_jobs",
        source_table="molecules",
        referent_table="jobs",
        local_cols=["latest_job_id"],
        remote_cols=["id"],
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_job_bundles_id"), table_name="job_bundles")
    op.drop_table("job_bundles")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_server_credentials_id"), table_name="server_credentials")
    op.drop_table("server_credentials")
    op.drop_index(op.f("ix_molecules_id"), table_name="molecules")
    op.drop_table("molecules")
    op.drop_index(op.f("ix_jobs_id"), table_name="jobs")
    op.drop_table("jobs")
    # ### end Alembic commands ###
